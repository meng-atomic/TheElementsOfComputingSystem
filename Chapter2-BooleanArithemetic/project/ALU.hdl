// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl
/**
 * ALU (Arithmetic Logic Unit):
 * Computes out = one of the following functions:
 *                0, 1, -1,
 *                x, y, !x, !y, -x, -y,
 *                x + 1, y + 1, x - 1, y - 1,
 *                x + y, x - y, y - x,
 *                x & y, x | y
 * on the 16-bit inputs x, y,
 * according to the input bits zx, nx, zy, ny, f, no.
 * In addition, computes the output bits:
 * zr = (out == 0, 1, 0);
 * ng = (out < 0,  1, 0);
 */
// Implementation: Manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) sets x = 0        // 16-bit constant
// if (nx == 1) sets x = !x       // bitwise not
// if (zy == 1) sets y = 0        // 16-bit constant
// if (ny == 1) sets y = !y       // bitwise not
// if (f == 1)  sets out = x + y  // integer 2's complement addition
// if (f == 0)  sets out = x & y  // bitwise and
// if (no == 1) sets out = !out   // bitwise not
CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute (out = x + y) or (out = x & y)?
        no; // negate the out output?
    OUT 
        out[16], // 16-bit output
        zr,      // (out == 0, 1, 0);
        ng;      // (out < 0,  1, 0);

    PARTS:
    // zero the x input
    Mux16(a=x,b[0..15]=false,sel=zx,out=xzero);

    // negate the x input
    Not16(in=xzero,out=xneg0);
    Mux16(a=xzero,b=xneg0,sel=nx,out=xfin);

    // zero the y input
    Mux16(a=y,b[0..15]=false,sel=zy,out=yzero);

    // negate the y input
    Not16(in=yzero,out=yneg0);
    Mux16(a=yzero,b=yneg0,sel=ny,out=yfin);

    // compute (out = x + y) or (out = x & y)?
    Add16(a=xfin,b=yfin,out=xaddy);
    And16(a=xfin,b=yfin,out=xandy);
    Mux16(a=xandy,b=xaddy,sel=f,out=fout);

    // negate the out output?
    Not16(in=fout,out=nout);
    Mux16(a=fout,b=nout,sel=no,out=ofin,out[0..7]=ofinl,out[8..15]=ofinh);

    // zr
    Or8Way(in=ofinl,out=o1);
    Or8Way(in=ofinh,out=o2);
    Or(a=o1,b=o2,out=nzr);
    Not(in=nzr,out=zr);

    // ng
    And16(a=ofin,b[15]=true,out[15]=ng);

    //out
    Or16(a=ofin,b[0..15]=false,out=out);
}