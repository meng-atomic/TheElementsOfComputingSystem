// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl
/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */
CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];
    
    PARTS:
    Mux16(a=a,b=b,sel=sel[0],out=m1);
    Not(in=sel[1],out=nsel1);
    And(a=m1[0],b=nsel1,out=m1[0]);
    And(a=m1[1],b=nsel1,out=m1[1]);
    And(a=m1[2],b=nsel1,out=m1[2]);
    And(a=m1[3],b=nsel1,out=m1[3]);
    And(a=m1[4],b=nsel1,out=m1[4]);
    And(a=m1[5],b=nsel1,out=m1[5]);
    And(a=m1[6],b=nsel1,out=m1[6]);
    And(a=m1[7],b=nsel1,out=m1[7]);
    And(a=m1[8],b=nsel1,out=m1[8]);
    And(a=m1[9],b=nsel1,out=m1[9]);
    And(a=m1[10],b=nsel1,out=m1[10]);
    And(a=m1[11],b=nsel1,out=m1[11]);
    And(a=m1[12],b=nsel1,out=m1[12]);
    And(a=m1[13],b=nsel1,out=m1[13]);
    And(a=m1[14],b=nsel1,out=m1[14]);
    And(a=m1[15],b=nsel1,out=m1[15]);
    
    Mux16(a=c,b=d,sel=sel[0],out=m2);
    And(a=m2[0],b=sel[1],out=m2[0]);
    And(a=m2[1],b=sel[1],out=m2[1]);
    And(a=m2[2],b=sel[1],out=m2[2]);
    And(a=m2[3],b=sel[1],out=m2[3]);
    And(a=m2[4],b=sel[1],out=m2[4]);
    And(a=m2[5],b=sel[1],out=m2[5]);
    And(a=m2[6],b=sel[1],out=m2[6]);
    And(a=m2[7],b=sel[1],out=m2[7]);
    And(a=m2[8],b=sel[1],out=m2[8]);
    And(a=m2[9],b=sel[1],out=m2[9]);
    And(a=m2[10],b=sel[1],out=m2[10]);
    And(a=m2[11],b=sel[1],out=m2[11]);
    And(a=m2[12],b=sel[1],out=m2[12]);
    And(a=m2[13],b=sel[1],out=m2[13]);
    And(a=m2[14],b=sel[1],out=m2[14]);
    And(a=m2[15],b=sel[1],out=m2[15]);

    Or16(a=m1,b=m2,out=out)
}